// <auto-generated />
[assembly: Codeworx.Rest.RestProxy(typeof(global::Codeworx.Rest.UnitTests.Api.Contract.ICancellationTokenController), typeof(Codeworx.Rest.UnitTests.Generated.CancellationTokenControllerClient))]
namespace Codeworx.Rest.UnitTests.Generated
{
    public class CancellationTokenControllerClient : Codeworx.Rest.Client.RestClient<global::Codeworx.Rest.UnitTests.Api.Contract.ICancellationTokenController>, global::Codeworx.Rest.UnitTests.Api.Contract.ICancellationTokenController
    {
        public CancellationTokenControllerClient(Codeworx.Rest.Client.RestOptions<global::Codeworx.Rest.UnitTests.Api.Contract.ICancellationTokenController> options): base(options)
        {
        }

        public global::System.Threading.Tasks.Task<bool> Delete(global::System.Threading.CancellationToken token)
        {
            return CallAsync(c => c.Delete(token));
        }

        public global::System.Threading.Tasks.Task<bool> Get(global::System.Threading.CancellationToken token)
        {
            return CallAsync(c => c.Get(token));
        }

        public global::System.Threading.Tasks.Task<bool> Post(global::System.Threading.CancellationToken token)
        {
            return CallAsync(c => c.Post(token));
        }

        public global::System.Threading.Tasks.Task<bool> Put(global::System.Threading.CancellationToken token)
        {
            return CallAsync(c => c.Put(token));
        }

        public global::System.Threading.Tasks.Task<bool> Head(global::System.Threading.CancellationToken token)
        {
            return CallAsync(c => c.Head(token));
        }
    }
}